<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.amazonaws</groupId>
    <version>1.2.0</version>
    <artifactId>dynamodb-cross-region-replication</artifactId>
    <packaging>jar</packaging>
    <name>DynamoDB Cross-region Replication</name>
    <description>
        The DynamoDB Cross-Region Replication library allows you to replicate DynamoDB tables in real-time with Streams.
    </description>
    <url>https://github.com/awslabs/dynamodb-cross-region-library</url>
    <scm>
        <url>https://github.com/awslabs/dynamodb-cross-region-library.git</url>
    </scm>

    <properties>
        <aws.java.sdk.version>1.11.115</aws.java.sdk.version>
        <aws.dynamodblocal.version>1.11.86</aws.dynamodblocal.version>
        <amazon.kinesis-client-library.version>1.7.5</amazon.kinesis-client-library.version>
        <amazon.kinesis-connectors.version>1.3.0</amazon.kinesis-connectors.version>
        <dynamodb-streams-kinesis-adapter.version>1.2.0</dynamodb-streams-kinesis-adapter.version>
        <guava.version>18.0</guava.version>
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <junit.version>4.12</junit.version>
        <easymock.version>3.2</easymock.version>
        <powermock.version>1.6.2</powermock.version>
        <maven.assembly.version>2.5.3</maven.assembly.version>
        <maven.compiler.version>3.3</maven.compiler.version>
        <maven.dependency.version>2.10</maven.dependency.version>
        <maven.resources.version>2.7</maven.resources.version>
        <maven.surefire.version>2.18.1</maven.surefire.version>
        <download.maven.version>1.3.0</download.maven.version>
        <maven.failsafe.version>2.19.1</maven.failsafe.version>
        <dynamodb-local.port>4567</dynamodb-local.port>
        <exec.maven.plugin.version>1.4</exec.maven.plugin.version>
        <jcommander.version>1.48</jcommander.version>
        <log4j.version>1.2.17</log4j.version>
        <maven.shade.version>2.4.1</maven.shade.version>
        <java.jdk.version>1.7</java.jdk.version>
    </properties>

    <developers>
        <developer>
            <name>Ben Schwartz</name>
            <email>schwar@amazon.com</email>
        </developer>
        <developer>
            <name>Daniela Miao</name>
            <email>dym@amazon.com</email>
        </developer>
        <developer>
            <name>Alexander Patrikalakis</name>
            <email>amcp@me.com</email>
            <url>https://www.linkedin.com/in/amcpatrix/en</url>
        </developer>
    </developers>
    <contributors>
        <contributor>
            <name>Kenny Lei</name>
            <email>kennylei@amazon.com</email>
        </contributor>
    </contributors>
    <inceptionYear>2014</inceptionYear>
    <licenses>
        <license>
            <name>Amazon Software License</name>
            <url>http://aws.amazon.com/asl/</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- Dependency Management -->
    <dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>com.amazonaws</groupId>
          <artifactId>aws-java-sdk-bom</artifactId>
          <version>${aws.java.sdk.version}</version>
          <type>pom</type>
          <scope>import</scope>
        </dependency>
      </dependencies>
    </dependencyManagement>

    <!-- Libraries -->
    <dependencies>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-dynamodb</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-cloudwatch</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-logs</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>amazon-kinesis-client</artifactId>
            <version>${amazon.kinesis-client-library.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>amazon-kinesis-connectors</artifactId>
            <version>${amazon.kinesis-connectors.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>dynamodb-streams-kinesis-adapter</artifactId>
            <version>${dynamodb-streams-kinesis-adapter.version}</version>
        </dependency>
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>${jcommander.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.16</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>${easymock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-easymock</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.jdk.version}</source>
                    <target>${java.jdk.version}</target>
                </configuration>
                <version>${maven.compiler.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Tests.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/CrossRegionReplicationIntegrationTests.java</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <log4j.configuration>file:${project.build.testOutputDirectory}/unitTestsLog4j.properties</log4j.configuration>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- use shade plugin to produce one fat jar as target -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!-- do not create a separate pom.xml file with reduced dependencies -->
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <filters>
                                <!-- required to make a valid signature during main class execution-->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.amazonaws.services.dynamodbv2.streams.connectors.CommandLineInterface</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.googlecode.maven-download-plugin</groupId>
                        <artifactId>download-maven-plugin</artifactId>
                        <version>${download.maven.version}</version>
                        <executions>
                            <execution>
                                <id>install-dynamodb_local</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>wget</goal>
                                </goals>
                                <configuration>
                                    <url>https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.zip</url>
                                    <unpack>true</unpack>
                                    <outputDirectory>${project.build.directory}/dynamodb</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>com.bazaarvoice.maven.plugins</groupId>
                        <artifactId>process-exec-maven-plugin</artifactId>
                        <version>0.4</version>
                        <executions>
                            <execution>
                                <id>dynamodb_local</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>dynamodb_local</name>
                                    <waitAfterLaunch>1</waitAfterLaunch>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Djava.library.path=dynamodb/DynamoDBLocal_lib</argument>
                                        <argument>-jar</argument>
                                        <argument>dynamodb/DynamoDBLocal.jar</argument>
                                        <argument>-inMemory</argument>
                                        <argument>-port</argument>
                                        <argument>${dynamodb-local.port}</argument>
                                        <argument>-sharedDb</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <!--Stop Process-->
                            <execution>
                                <id>stop-jar-process</id>
                                <phase>post-integration-test</phase>
                                <goals><goal>stop-all</goal></goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven.failsafe.version}</version>
                        <executions>
                            <execution>
                                <id>default-integration-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>**/CrossRegionReplicationIntegrationTests.java</include>
                                    </includes>
                                    <skip>false</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
